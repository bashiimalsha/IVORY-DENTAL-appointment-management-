{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Appointment Management\\\\client\\\\src\\\\pages\\\\AppManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../components/Layout';\nimport { SearchOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { Table, Button, message } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppManager = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const formattedDate = date.toISOString().split('T')[0];\n    return formattedDate;\n  };\n  useEffect(() => {\n    const fetchAppointmentsData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3002/api/patient/get-app\");\n        setAppointments(response.data);\n      } catch (error) {\n        message.error(\"Failed to fetch Appointment data\");\n        console.error(error);\n      }\n    };\n    fetchAppointmentsData();\n  }, []);\n\n  //Handle Search\n  const handleSearch = async () => {\n    // Implement search logic here\n  };\n  const handleApprove = async id => {\n    try {\n      const response = await axios.post(`http://localhost:3002/api/appManager/approve/${id}`);\n      const updatedAppointment = response.data.appointment;\n      setAppointments(prevAppointments => prevAppointments.map(appointment => appointment._id === updatedAppointment._id ? updatedAppointment : appointment));\n      message.success('Appointment approved successfully');\n    } catch (error) {\n      console.error('Error approving appointment:', error);\n      message.error('Failed to approve appointment. Please try again later.');\n    }\n  };\n  const handleReject = async id => {\n    try {\n      const response = await axios.post(`http://localhost:3002/api/appManager/reject/${id}`);\n      const updatedAppointment = response.data.appointment;\n      setAppointments(prevAppointments => prevAppointments.map(appointment => appointment._id === updatedAppointment._id ? updatedAppointment : appointment));\n      message.success('Appointment rejected successfully');\n    } catch (error) {\n      console.error('Error rejecting appointment:', error);\n      message.error('Failed to reject appointment. Please try again later.');\n    }\n  };\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"Name\",\n    key: \"Name\"\n  }, {\n    title: \"Phone\",\n    dataIndex: \"phoneNumber\",\n    key: \"phoneNumber\"\n  }, {\n    title: \"Service\",\n    dataIndex: \"service\",\n    key: \"service\"\n  }, {\n    title: \"Doctor\",\n    dataIndex: \"doctor\",\n    key: \"doctor\"\n  }, {\n    title: \"Date\",\n    dataIndex: \"date\",\n    key: \"date\",\n    render: date => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: formatDate(date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this)\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\"\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => handleApprove(record._id),\n        disabled: record.status !== 'pending',\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleReject(record._id),\n        disabled: record.status !== 'pending',\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchInput\",\n        placeholder: \" Search by Name\",\n        prefix: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }, this),\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        style: {\n          width: \"250px\",\n          height: \"30px\",\n          border: \"none\",\n          boxShadow: \"none\",\n          borderRadius: '50px',\n          marginLeft: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          fontSize: \"20px\",\n          cursor: \"pointer\",\n          padding: \"2.5px\"\n        },\n        onClick: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: appointments.map(appointment => ({\n        ...appointment,\n        key: appointment._id\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(AppManager, \"an8LI2ORrHvKZBUIL5iRHad8rdM=\");\n_c = AppManager;\nexport default AppManager;\nvar _c;\n$RefreshReg$(_c, \"AppManager\");","map":{"version":3,"names":["React","useEffect","useState","Layout","SearchOutlined","axios","Table","Button","message","jsxDEV","_jsxDEV","AppManager","_s","appointments","setAppointments","searchQuery","setSearchQuery","formatDate","dateString","date","Date","formattedDate","toISOString","split","fetchAppointmentsData","response","get","data","error","console","handleSearch","handleApprove","id","post","updatedAppointment","appointment","prevAppointments","map","_id","success","handleReject","columns","title","dataIndex","key","render","children","fileName","_jsxFileName","lineNumber","columnNumber","text","record","type","onClick","disabled","status","className","placeholder","prefix","value","onChange","e","target","style","width","height","border","boxShadow","borderRadius","marginLeft","fontSize","cursor","padding","dataSource","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/Appointment Management/client/src/pages/AppManager.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Table, Button, message } from 'antd';\r\n\r\nconst AppManager = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const formattedDate = date.toISOString().split('T')[0];\r\n    return formattedDate;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAppointmentsData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3002/api/patient/get-app\");\r\n        setAppointments(response.data);\r\n      } catch (error) {\r\n        message.error(\"Failed to fetch Appointment data\");\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchAppointmentsData();\r\n  }, []);\r\n\r\n  //Handle Search\r\n  const handleSearch = async () => {\r\n    // Implement search logic here\r\n  };\r\n\r\n  const handleApprove = async (id) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:3002/api/appManager/approve/${id}`);\r\n      const updatedAppointment = response.data.appointment;\r\n      setAppointments((prevAppointments) =>\r\n        prevAppointments.map((appointment) =>\r\n          appointment._id === updatedAppointment._id ? updatedAppointment : appointment\r\n        )\r\n      );\r\n      message.success('Appointment approved successfully');\r\n    } catch (error) {\r\n      console.error('Error approving appointment:', error);\r\n      message.error('Failed to approve appointment. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleReject = async (id) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:3002/api/appManager/reject/${id}`);\r\n      const updatedAppointment = response.data.appointment;\r\n      setAppointments((prevAppointments) =>\r\n        prevAppointments.map((appointment) =>\r\n          appointment._id === updatedAppointment._id ? updatedAppointment : appointment\r\n        )\r\n      );\r\n      message.success('Appointment rejected successfully');\r\n    } catch (error) {\r\n      console.error('Error rejecting appointment:', error);\r\n      message.error('Failed to reject appointment. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"Name\",\r\n      key: \"Name\",\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: \"phoneNumber\",\r\n    },\r\n    {\r\n      title: \"Service\",\r\n      dataIndex: \"service\",\r\n      key: \"service\",\r\n    },\r\n    {\r\n      title: \"Doctor\",\r\n      dataIndex: \"doctor\",\r\n      key: \"doctor\",\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n      render: (date) => <span>{formatDate(date)}</span>,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => handleApprove(record._id)} disabled={record.status !== 'pending'}>\r\n            Approve\r\n          </Button>\r\n          <Button onClick={() => handleReject(record._id)} disabled={record.status !== 'pending'}>\r\n            Reject\r\n          </Button>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className='page-title'>Appointments</h1>\r\n      <div className='search'>\r\n        <input\r\n          className='searchInput'\r\n          placeholder=' Search by Name'\r\n          prefix={<SearchOutlined />}\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          style={{ width: \"250px\", height: \"30px\", border: \"none\", boxShadow: \"none\", borderRadius: '50px', marginLeft: '15px' }}\r\n        />\r\n        <SearchOutlined\r\n          style={{ fontSize: \"20px\", cursor: \"pointer\", padding: \"2.5px\" }}\r\n          onClick={handleSearch}\r\n        />\r\n      </div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={appointments.map(appointment => ({ ...appointment, key: appointment._id }))}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AppManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}